services:
  openwebui:
    container_name: open-webui
    image: ghcr.io/open-webui/open-webui:main
    ports:
      - "3000:8080"
    volumes:
      - ${OPENWEBUI_DATA_PATH}:/app/backend/data
    environment:
      - PORT=3000
      - OPENAI_API_BASE_URL
    restart: unless-stopped
    deploy:
      resources:
        limits:
          memory: 1G
          cpus: "0.5"
        reservations:
          memory: 512M

  flowise:
    container_name: flowise
    image: flowiseai/flowise:latest
    ports:
      - 3001:3001
    volumes:
      - ${FLOWISE_DATA_PATH}:/data
    environment:
      - PORT=3001
      - CORS_ORIGINS=*
      - IFRAME_ORIGINS=*
      - FLOWISE_USERNAME=${FLOWISE_USERNAME}
      - FLOWISE_PASSWORD=${FLOWISE_PASSWORD}
      - FLOWISE_FILE_SIZE_LIMIT=500mb
      - DEBUG=false
      - DATABASE_TYPE=postgres
      - DATABASE_PORT=5432
      - DATABASE_HOST=postgres
      - DATABASE_NAME=flowise
      - DATABASE_USER=${POSTGRES_USER}
      - DATABASE_PASSWORD=${POSTGRES_PASSWORD}
      - DATABASE_SSL=false
      - DATABASE_PATH=/data
      - BLOB_STORAGE_PATH=/data/uploads
      - APIKEY_PATH=/data
      - SECRETKEY_PATH=/data
      # - DATABASE_SSL_KEY_BASE64=
      # - APIKEY_STORAGE_TYPE=
      # - FLOWISE_SECRETKEY_OVERWRITE=
      # - LOG_LEVEL=
      # - LOG_PATH=
      # - DISABLE_FLOWISE_TELEMETRY=
      # - MODEL_LIST_CONFIG_JSON=
      # - GLOBAL_AGENT_HTTP_PROXY=
      # - GLOBAL_AGENT_HTTPS_PROXY=
      # - GLOBAL_AGENT_NO_PROXY=
      # - DISABLED_NODES=

    networks:
      - localai_nvidia_ai_network
    stdin_open: true
    tty: true
    restart: unless-stopped
    resources:
        limits:
          memory: 1G
          cpus: "0.5"
        reservations:
          memory: 512M

  unstructuredapi:
    container_name: unstructuredapi
    platform: linux/amd64
    image: downloads.unstructured.io/unstructured-io/unstructured-api:latest
    ports:
      - 8003:8003
    networks:
      - localai_nvidia_ai_network
    environment:
      - UNSTRUCTURED_PARALLEL_MODE_ENABLED=false
      - UNSTRUCTURED_PARALLEL_MODE_URL=""
      - UNSTRUCTURED_PARALLEL_MODE_THREADS=3
      - UNSTRUCTURED_PARALLEL_MODE_SPLIT_SIZE=1
      - UNSTRUCTURED_PARALLEL_MODE_RETRY_ATTEMPTS=2
      - PORT=8003
    stdin_open: true
    tty: true
    restart: unless-stopped
    resources:
        limits:
          memory: 2G
          cpus: "1.0"
        reservations:
          memory: 1G

  jupyterlab:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: jupyterlab
    restart: unless-stopped
    environment:
      - NVIDIA_VISIBLE_DEVICES=0,1
      - JUPYTER_ENABLE_LAB=yes
    deploy:
      resources:
        limits:
          cpus: "8.0"
          memory: "32GB"
    volumes:
      - ${JUPYTER_DATA_DIR}:/home/jovyan/work
    ports:
      - "8888:8888"
    command: start-notebook.sh --NotebookApp.token='' --NotebookApp.password=''
    networks:
      - localai_nvidia_ai_network
    runtime: nvidia

  n8n:
    container_name: n8n
    platform: linux/amd64
    image: n8nio/n8n:latest
    ports:
      - 5678:5678
    volumes:
      - ${N8N_DATA_PATH}:/home/node/.n8n docker.n8n.io/n8nio/n8n
    environment:
      - DB_TYPE=postgresdb
      - DB_POSTGRESDB_HOST=postgres
      - DB_POSTGRESDB_DATABASE=n8n
      - DB_POSTGRESDB_USER=${POSTGRES_USER}
      - DB_POSTGRESDB_PASSWORD=${POSTGRES_PASSWORD}
      - N8N_DIAGNOSTICS_ENABLED=false
      - N8N_PERSONALIZATION_ENABLED=false
      - N8N_ENCRYPTION_KEY
      - N8N_USER_MANAGEMENT_JWT_SECRET
      - N8N_SECURE_COOKIE=false

    stdin_open: true
    tty: true
    restart: unless-stopped
  volumes:
  openwebui-data:
  flowise-data:
  unstructuredapi-data:



networks:
  ai_network:
    external: true